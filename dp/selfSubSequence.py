"""Repeating Sub-Sequence
Problem Description
Given a string A, find if there is any subsequence that repeats itself. A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters. NOTE: Sub-sequence length should be greater than or equal to 2. 


Problem Constraints
1 <= length(A) <= 100


Input Format
The first and the only argument of input contains a string A.


Output Format
Return an integer, 1 if there is any subsequence which repeat itself else return 0.


Example Input
Input 1:
 A = "abab"
Input 2:
 A = "abba"


Example Output
Output 1:
 1
Output 2:
 0


Example Explanation
Explanation 1:
 "ab" is repeated.
Explanation 2:
 There is no repeating subsequence."""


class Solution:
	# @param A : string
	# @return an integer
	def anytwo(self, A):
        n = len(A)
        dp = [[0]*(n+1) for i in range(n+1)]
        for i in range(1,n+1):
            for j in range(1,n+1):
                if A[i-1] == A[j-1] and j!= i:
                    dp[i][j] = dp[i-1][j-1]+1
                else:
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1])
                
                if dp[i][j] >= 2: return 1
                
        return 0